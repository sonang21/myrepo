/* *************************************************************************
 * NAME : dbo.UDP_GOODS_EXTERNAL_STATS
 * TYPE : PROCEDURE (SQL_STORED_PROCEDURE)
 * TIME : Create: 2017-02-21 10:04:38.587
 *        Modify: 2018-05-03 17:23:34.7
 *        Backup: 20180521_1737
 ************************************************************************* */


CREATE PROC [DBO].[UDP_GOODS_EXTERNAL_STATS]
	@SHOP_CODE INT
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	/*
		TBL_EXTERNAL_ATTRIBUTE			-- (셋팅 속성)
		TBL_EXTERNAL_ATTRIBUTE_BACKUP	-- (셋팅 속성 삭제)
		TBL_EXTERNAL_AUTO_TARGET		-- (자동매칭 내역)
		TBL_EXTERNAL_CATEGORY			-- (전송 분류)
		TBL_EXTERNAL_MODELNO_LOG		-- (CM 속성 로그)
		TBL_EXTERNAL_SEND_TARGET_MODEL	-- (누적 전송 모델)
		TBL_EXTERNAL_SEND_TARGET_PLNO	-- (누적 전송 EP)
		TBL_EXTERNAL_DENIED_PLNO		-- (CM 매칭 불가 내역)
		
		TBL_EXTERNAL_REQUEST			-- (GS 요청 내역)
		TBL_EXTERNAL_STATS_ATTRIBUTE	-- (통계 - ENURI 분류 기준)
		TBL_EXTERNAL_STATS_ENURI		-- (통계 - ENURI 분류 기준)
		TBL_EXTERNAL_STATS_GS			-- (통계 - GS 분류 기준)
		
	*/
	
	DELETE FROM TBL_EXTERNAL_STATS_ATTRIBUTE	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	DELETE FROM TBL_EXTERNAL_STATS_ENURI		WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	DELETE FROM TBL_EXTERNAL_STATS_GS			WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)

	-----------------------------------------------------------------------------------
	-- ENURI CATEGORY 기준
	-----------------------------------------------------------------------------------
	-- PL_NO 기준 STATS (매일 누적)
	INSERT INTO TBL_EXTERNAL_STATS_ENURI(SHOP_CODE, YYYYMMDD, CATEGORY, SEND_CNT, MATCHING_CNT, DENIED_CNT)
	SELECT @SHOP_CODE, CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112), LEFT(CATEGORY, 6), COUNT(PL_NO), SUM(MATCHING_YN), SUM(DENIED_YN)
	FROM (
		SELECT A.PL_NO, RTRIM(ISNULL(CATEGORY, ISNULL(PL_CATEGORY, ''))) CATEGORY
			 , CASE WHEN MODELNO > 0 THEN 1 ELSE 0 END MATCHING_YN
			 , CASE WHEN B.PL_MODELNO NOT IN (0, -100, -200, -300) AND B.PL_MODELNO < 0 THEN 1 ELSE 0 END DENIED_YN
		FROM PRICELIST A
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_PLNO B ON B.SHOP_CODE = @SHOP_CODE AND B.PL_NO = A.PL_NO
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
		WHERE PL_VCODE = @SHOP_CODE AND PL_STATUS = '4' AND PL_SRVFLAG = '4'
		  AND LTRIM(RTRIM(ISNULL(PL_MULTICOMMENT, ''))) IN (SELECT CATEGORY_NM FROM TBL_EXTERNAL_CATEGORY WHERE SHOP_CODE = @SHOP_CODE AND SENDING_YN = 1)			-- 전송 분류
	)A
	GROUP BY LEFT(CATEGORY, 6)
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_ENURI
	SET MODEL_CNT = B.MODEL_CNT
	FROM TBL_EXTERNAL_STATS_ENURI A
		INNER JOIN (
			SELECT LEFT(RTRIM(C.CATEGORY), 6) CATEGORY, COUNT(DISTINCT MODELNO) MODEL_CNT
			FROM TBL_EXTERNAL_SEND_TARGET_PLNO B
				INNER JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
			WHERE B.SHOP_CODE = @SHOP_CODE
			GROUP BY LEFT(RTRIM(C.CATEGORY), 6)
		) B ON A.CATEGORY = B.CATEGORY
	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	OPTION (MAXDOP 1)
	
	-----------------------------------------------------------------------------------
	-- ATTRIBUTE_ID 기준 STATS (매일 누적)
	SELECT C.CATEGORY, C.ATTRIBUTE_ID, COUNT(DISTINCT PL_NO) ATTRIBUTE_PLNO_CNT
	INTO #ENURI_ATTRIBUTE_STATS
	FROM TBL_EXTERNAL_SEND_TARGET_PLNO A
		INNER JOIN TBL_EXTERNAL_SEND_TARGET_MODEL B ON B.SHOP_CODE = @SHOP_CODE AND MODELNO = PL_MODELNO
		INNER JOIN TBL_EXTERNAL_ATTRIBUTE C ON C.SHOP_CODE = @SHOP_CODE AND C.CATEGORY = S_CATEGORY AND C.ATTRIBUTE_ID > 0
		INNER JOIN GOODS_CATEGORY_ATTRIBUTE D ON D.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND D.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(B.CATEGORY, 4) OR CATEGORY = LEFT(B.CATEGORY, 6) OR CATEGORY = LEFT(B.CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
		INNER JOIN GOODS_CATALOG_ATTRIBUTE E ON E.G_MODELNO = MODELNO AND E.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND DEL_YN = 'N'
	WHERE A.SHOP_CODE = @SHOP_CODE
	GROUP BY C.CATEGORY, C.ATTRIBUTE_ID
	OPTION (MAXDOP 1)
	
	INSERT INTO TBL_EXTERNAL_STATS_ATTRIBUTE(SHOP_CODE, YYYYMMDD, CATEGORY, ATTRIBUTE_ID, MANAGE_ATTRIBUTE_NM, GALLERY_ATTRIBUTE_NM, USE_CLASS_CODE, ATTRIBUTE_PLNO_CNT, TARGET_AIM)
	SELECT DISTINCT SHOP_CODE, CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112), A.CATEGORY, A.ATTRIBUTE_ID
	     , ISNULL(MANAGE_ATTRIBUTE_NM, ''), ISNULL(GALLERY_ATTRIBUTE_NM, ''), ISNULL(USE_CLASS_CODE, ''), ISNULL(ATTRIBUTE_PLNO_CNT, 0), ISNULL(TARGET_AIM, 90)
	FROM TBL_EXTERNAL_ATTRIBUTE A
		LEFT JOIN GOODS_ATTRIBUTE B ON DEL_YN = 'N' AND B.ATTRIBUTE_ID = A.ATTRIBUTE_ID
		LEFT JOIN #ENURI_ATTRIBUTE_STATS C ON C.CATEGORY = A.CATEGORY AND C.ATTRIBUTE_ID = A.ATTRIBUTE_ID
	WHERE A.SHOP_CODE = @SHOP_CODE AND A.ATTRIBUTE_ID > 0
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_ATTRIBUTE
	SET PLNO_CNT = B.MATCHING_CNT
	FROM TBL_EXTERNAL_STATS_ATTRIBUTE A
		INNER JOIN TBL_EXTERNAL_STATS_ENURI B ON B.SHOP_CODE = A.SHOP_CODE AND B.YYYYMMDD = A.YYYYMMDD AND B.CATEGORY = A.CATEGORY
	WHERE A.SHOP_CODE = @SHOP_CODE AND A.YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	OPTION (MAXDOP 1)
	
	-----------------------------------------------------------------------------------
	-- GS 요청 내역 추가 계산
	SELECT LEFT(RTRIM(ISNULL(CATEGORY, PL_CATEGORY)), 6) CATEGORY, COUNT(A.PL_NO) SEND_CNT, SUM(MATCHING_YN) MATCHING_CNT, SUM(DENIED_YN) DENIED_CNT
	INTO #ENURI_REQUEST
	FROM (
		SELECT A.PL_NO, CASE WHEN A.PL_MODELNO > 0 THEN 1 ELSE 0 END MATCHING_YN, CASE WHEN A.PL_MODELNO < 0 THEN 1 ELSE 0 END DENIED_YN, CATEGORY
		FROM TBL_EXTERNAL_REQUEST A
			INNER JOIN TBL_EXTERNAL_SEND_TARGET_PLNO B ON B.SHOP_CODE = @SHOP_CODE AND B.PL_NO = A.PL_NO
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
		WHERE A.PL_MODELNO NOT IN (0, -100, -200, -300) AND (MODELNO IS NOT NULL OR B.PL_MODELNO < 0)
	) A
		INNER JOIN PRICELIST B ON PL_VCODE = @SHOP_CODE AND A.PL_NO = B.PL_NO
	GROUP BY LEFT(RTRIM(ISNULL(CATEGORY, PL_CATEGORY)), 6)
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_ENURI
	SET SEND_CNT = A.SEND_CNT + B.SEND_CNT, MATCHING_CNT = A.MATCHING_CNT + B.MATCHING_CNT, DENIED_CNT = A.DENIED_CNT + B.DENIED_CNT
	FROM TBL_EXTERNAL_STATS_ENURI A
		INNER JOIN #ENURI_REQUEST B ON A.CATEGORY = B.CATEGORY
	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	OPTION (MAXDOP 1)
	
	DROP TABLE #ENURI_ATTRIBUTE_STATS
	DROP TABLE #ENURI_REQUEST
	
	
	-----------------------------------------------------------------------------------
	-- GS CATEGORY 기준
	-----------------------------------------------------------------------------------
	-- PL_NO 기준 STATS (매일 누적)
	INSERT INTO TBL_EXTERNAL_STATS_GS(SHOP_CODE, YYYYMMDD, CATEGORY, SEND_CNT, MATCHING_CNT, DENIED_CNT)
	SELECT @SHOP_CODE, CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112), CATEGORY, COUNT(PL_NO), SUM(MATCHING_YN), SUM(DENIED_YN)
	FROM (
		SELECT A.PL_NO, LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', ''))) CATEGORY
			 , CASE WHEN MODELNO > 0 THEN 1 ELSE 0 END MATCHING_YN
			 , CASE WHEN B.PL_MODELNO NOT IN (0, -100, -200, -300) AND B.PL_MODELNO < 0 THEN 1 ELSE 0 END DENIED_YN
		FROM PRICELIST A
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_PLNO B ON B.SHOP_CODE = @SHOP_CODE AND B.PL_NO = A.PL_NO
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
		WHERE PL_VCODE = @SHOP_CODE AND PL_STATUS = '4' AND PL_SRVFLAG = '4'
		  AND LTRIM(RTRIM(ISNULL(PL_MULTICOMMENT, ''))) IN (SELECT CATEGORY_NM FROM TBL_EXTERNAL_CATEGORY WHERE SHOP_CODE = @SHOP_CODE AND SENDING_YN = 1)			-- 전송 분류
	)A
	GROUP BY CATEGORY
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_GS
	SET MODEL_CNT = B.MODEL_CNT
	FROM TBL_EXTERNAL_STATS_GS A
		INNER JOIN (
			SELECT LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', ''))) CATEGORY, COUNT(DISTINCT MODELNO) MODEL_CNT
			FROM PRICELIST A
				INNER JOIN TBL_EXTERNAL_SEND_TARGET_PLNO B ON B.SHOP_CODE = @SHOP_CODE AND B.PL_NO = A.PL_NO
				INNER JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
			WHERE PL_VCODE = @SHOP_CODE AND PL_STATUS = '4' AND PL_SRVFLAG = '4'
			GROUP BY LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', '')))
		) B ON A.CATEGORY = B.CATEGORY
	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	OPTION (MAXDOP 1)
	
	-----------------------------------------------------------------------------------
	-- ATTRIBUTE_ID 기준 STATS (매일 누적)
	SELECT LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', ''))) PL_MULTICOMMENT, C.CATEGORY, C.ATTRIBUTE_ID, COUNT(DISTINCT A.PL_NO) ATTRIBUTE_PLNO_CNT, COUNT(*) PLNO_CNT
	INTO #GS_ATTRIBUTE_STATS
	FROM TBL_EXTERNAL_SEND_TARGET_PLNO A
		INNER JOIN TBL_EXTERNAL_SEND_TARGET_MODEL B ON B.SHOP_CODE = @SHOP_CODE AND MODELNO = PL_MODELNO
		INNER JOIN TBL_EXTERNAL_ATTRIBUTE C ON C.SHOP_CODE = @SHOP_CODE AND C.CATEGORY = S_CATEGORY AND C.ATTRIBUTE_ID > 0
		INNER JOIN GOODS_CATEGORY_ATTRIBUTE D ON D.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND D.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(B.CATEGORY, 4) OR CATEGORY = LEFT(B.CATEGORY, 6) OR CATEGORY = LEFT(B.CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
		INNER JOIN GOODS_CATALOG_ATTRIBUTE E ON E.G_MODELNO = MODELNO AND E.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND DEL_YN = 'N'
		INNER JOIN PRICELIST F ON A.PL_NO = F.PL_NO
	WHERE A.SHOP_CODE = @SHOP_CODE
	GROUP BY LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', ''))), C.CATEGORY, C.ATTRIBUTE_ID
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_GS
	SET ATTRIBUTE_PLNO_CNT = B.ATTRIBUTE_PLNO_CNT, PLNO_CNT = B.PLNO_CNT, TARGET_AIM = B.TARGET_AIM
	FROM TBL_EXTERNAL_STATS_GS A
		INNER JOIN (
			SELECT PL_MULTICOMMENT CATEGORY, SUM(ATTRIBUTE_PLNO_CNT) ATTRIBUTE_PLNO_CNT, SUM(PLNO_CNT) PLNO_CNT, AVG(TARGET_AIM) TARGET_AIM
			FROM #GS_ATTRIBUTE_STATS A
				INNER JOIN TBL_EXTERNAL_ATTRIBUTE B ON SHOP_CODE = @SHOP_CODE AND B.CATEGORY = A.CATEGORY AND B.ATTRIBUTE_ID = A.ATTRIBUTE_ID AND B.ATTRIBUTE_ID > 0
			GROUP BY PL_MULTICOMMENT
		) B ON B.CATEGORY = A.CATEGORY
	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	OPTION (MAXDOP 1)
	
	-----------------------------------------------------------------------------------
	-- GS 요청 내역 추가 계산
	SELECT LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', ''))) CATEGORY, COUNT(A.PL_NO) SEND_CNT, SUM(MATCHING_YN) MATCHING_CNT, SUM(DENIED_YN) DENIED_CNT
	INTO #GS_REQUEST
	FROM (
		SELECT A.PL_NO, CASE WHEN A.PL_MODELNO > 0 THEN 1 ELSE 0 END MATCHING_YN, CASE WHEN A.PL_MODELNO < 0 THEN 1 ELSE 0 END DENIED_YN
		FROM TBL_EXTERNAL_REQUEST A
			INNER JOIN TBL_EXTERNAL_SEND_TARGET_PLNO B ON B.SHOP_CODE = @SHOP_CODE AND B.PL_NO = A.PL_NO
			LEFT JOIN TBL_EXTERNAL_SEND_TARGET_MODEL C ON C.SHOP_CODE = @SHOP_CODE AND MODELNO = B.PL_MODELNO
		WHERE A.PL_MODELNO NOT IN (0, -100, -200, -300) AND (MODELNO IS NOT NULL OR B.PL_MODELNO < 0)
	) A
		INNER JOIN PRICELIST B ON PL_VCODE = @SHOP_CODE AND A.PL_NO = B.PL_NO
	GROUP BY LTRIM(RTRIM(REPLACE(ISNULL(PL_MULTICOMMENT, ''), '2-', '')))
	OPTION (MAXDOP 1)
	
	UPDATE TBL_EXTERNAL_STATS_GS
	SET SEND_CNT = A.SEND_CNT + B.SEND_CNT, MATCHING_CNT = A.MATCHING_CNT + B.MATCHING_CNT, DENIED_CNT = A.DENIED_CNT + B.DENIED_CNT
	FROM TBL_EXTERNAL_STATS_GS A
		INNER JOIN #GS_REQUEST B ON A.CATEGORY = B.CATEGORY
	WHERE SHOP_CODE = @SHOP_CODE AND YYYYMMDD = CONVERT(CHAR(8), DATEADD(D, -1, GETDATE()), 112)
	-----------------------------------------------------------------------------------
	
	DROP TABLE #GS_ATTRIBUTE_STATS
	DROP TABLE #GS_REQUEST
END
