/* *************************************************************************
 * NAME : dbo.UDP_MP_GOODS_CATALOG_ATTRIBUTE_SPEC_MOBILE
 * TYPE : PROCEDURE (SQL_STORED_PROCEDURE)
 * TIME : Create: 2016-04-05 20:26:17.98
 *        Modify: 2018-05-03 17:23:35.367
 *        Backup: 20180521_1737
 ************************************************************************* */


CREATE PROC [DBO].[UDP_MP_GOODS_CATALOG_ATTRIBUTE_SPEC_MOBILE]
	@MODELNO INT
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	

	SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
	--##################################################################
	DECLARE @QRY VARCHAR(8000)
	SET @QRY = 'DELETE OPENQUERY(ORADB, ''SELECT MODELNO, SORTNO, GROUPNM, TITLE, CELLCNT, CONTENT, ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, SPECNO FROM TBL_GOODS_SPEC_DETAIL WHERE MODELNO = ' + CAST(@MODELNO AS VARCHAR(20)) + ''')'
	EXEC (@QRY)
	--##################################################################
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;


	DECLARE @CATEGORY VARCHAR(12)
	SELECT @CATEGORY = G_CATEGORY
	FROM GOODS
	WHERE G_MODELNO = @MODELNO;

	DECLARE @BATCH_FLAG INT
	SELECT @BATCH_FLAG = COUNT(*)
    FROM GOODS_AUTO_APPLY_CATE WITH (READUNCOMMITTED)
    WHERE CATEGORY = LEFT(@CATEGORY, 4) AND FLAG = '0'

	IF @BATCH_FLAG > 0
	BEGIN
		SELECT @MODELNO MODELNO
			 , DENSE_RANK() OVER(ORDER BY D.DISPLAY_ORDER
										, CASE WHEN ISNULL(GROUP_ATTRIBUTE_ID, 0) = B.ATTRIBUTE_ID THEN '0' ELSE '1' END
										, GALLERY_ATTRIBUTE_NM
										, C.DISPLAY_ORDER
										, CASE WHEN USE_CLASS_CODE <> '2' THEN ATTRIBUTE_ELEMENT ELSE ATTRIBUTE_VALUE END) SORTNO
			 , LTRIM(RTRIM(ISNULL(CASE WHEN CHARINDEX('_', MANAGE_ATTRIBUTE_NM) > 0 THEN SUBSTRING(MANAGE_ATTRIBUTE_NM, 1, CHARINDEX('_', MANAGE_ATTRIBUTE_NM) - 1) ELSE '' END, ''))) GROUPNM
			 , LTRIM(RTRIM(ISNULL(GALLERY_ATTRIBUTE_NM, ''))) TITLE
			 , LTRIM(RTRIM(ISNULL(CASE WHEN USE_CLASS_CODE <> '2' THEN ATTRIBUTE_ELEMENT ELSE ATTRIBUTE_VALUE END, ''))) CONTENT
			 , B.ATTRIBUTE_ID
			 , GALLERY_ATTRIBUTE_NM
			 , USE_CLASS_CODE
			 , GROUP_ATTRIBUTE_ID
			 , GROUP_CHAR
			 , IS_GALLERY_DISPLAY
			 , C.ATTRIBUTE_ELEMENT_ID
			 , ATTRIBUTE_ELEMENT
			 , ATTRIBUTE_VALUE
			 , IS_DISPLAY
			 , B.IS_BOLD ATTRIBUTE_BOLD
			 , C.IS_BOLD ELEMENT_BOLD
			 , C.SPECNO
		INTO #SPEC_DETAIL_TEMP
		FROM GOODS_CATALOG_ATTRIBUTE A
			INNER JOIN GOODS_ATTRIBUTE B ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
			INNER JOIN GOODS_ATTRIBUTE_ELEMENT C ON A.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND A.ATTRIBUTE_ELEMENT_ID = C.ATTRIBUTE_ELEMENT_ID
			INNER JOIN GOODS_CATEGORY_ATTRIBUTE D ON A.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) OR CATEGORY = LEFT(@CATEGORY, 6) OR CATEGORY = LEFT(@CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
		WHERE A.DEL_YN = 'N'
		  AND B.DEL_YN = 'N'
		  AND C.DEL_YN = 'N'
		  AND G_MODELNO = @MODELNO
		  AND USE_CLASS_CODE < '4'
		  AND LTRIM(RTRIM(ISNULL(CASE WHEN USE_CLASS_CODE <> '2' THEN ATTRIBUTE_ELEMENT ELSE ATTRIBUTE_VALUE END, ''))) <> ''
		  AND CHARINDEX('_´ë°ýÈ£', MANAGE_ATTRIBUTE_NM) = 0
	
		SELECT GROUPNM
			 , TITLE
			 , COUNT(*) CNT
			 , MIN(SORTNO) TITLE_ORDER
		INTO #SPEC_DETAIL_GROUP
		FROM #SPEC_DETAIL_TEMP
		GROUP BY GROUPNM, TITLE

		SELECT MODELNO
			 , SORTNO
			 , CASE WHEN GROUPNO = 1 AND (SELECT COUNT(*) FROM #SPEC_DETAIL_TEMP) > 5 THEN GROUPNM ELSE '' END GROUPNM
			 , CASE WHEN TITLENO = 1 THEN TITLE ELSE '' END TITLE
			 , CNT
			 , CONTENT
			 , ATTRIBUTE_ID
			 , ATTRIBUTE_ELEMENT_ID
			 , SPECNO
		INTO #SPEC_DETAIL
		FROM (
			SELECT MODELNO
				 , DENSE_RANK() OVER(ORDER BY TITLE_ORDER, SORTNO) SORTNO
				 , A.GROUPNM
				 , A.TITLE
				 , CNT
				 , CONTENT
				 , ATTRIBUTE_ID
				 , ATTRIBUTE_ELEMENT_ID
				 , SPECNO
				 , DENSE_RANK() OVER(PARTITION BY A.GROUPNM ORDER BY SORTNO) GROUPNO
				 , DENSE_RANK() OVER(PARTITION BY A.GROUPNM, A.TITLE ORDER BY SORTNO) TITLENO
			FROM #SPEC_DETAIL_TEMP A
				INNER JOIN #SPEC_DETAIL_GROUP B ON A.GROUPNM = B.GROUPNM AND A.TITLE = B.TITLE
		) A


		SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
		--##################################################################
		INSERT OPENQUERY(ORADB, 'SELECT MODELNO, SORTNO, GROUPNM, TITLE, CELLCNT, CONTENT, ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, SPECNO, REGDATE FROM TBL_GOODS_SPEC_DETAIL')
		SELECT MODELNO, SORTNO, GROUPNM, TITLE, CNT, CONTENT, ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, SPECNO, GETDATE()
		FROM #SPEC_DETAIL
		ORDER BY SORTNO
		--##################################################################
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	END
END
