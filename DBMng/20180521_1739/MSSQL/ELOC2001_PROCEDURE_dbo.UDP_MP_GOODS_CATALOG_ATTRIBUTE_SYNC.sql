/* *************************************************************************
 * NAME : dbo.UDP_MP_GOODS_CATALOG_ATTRIBUTE_SYNC
 * TYPE : PROCEDURE (SQL_STORED_PROCEDURE)
 * TIME : Create: 2016-04-05 20:25:58.437
 *        Modify: 2018-05-03 17:23:35.317
 *        Backup: 20180521_1739
 ************************************************************************* */


CREATE PROC [DBO].[UDP_MP_GOODS_CATALOG_ATTRIBUTE_SYNC]
	@MODELNO INT
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	DECLARE @CATEGORY VARCHAR(12)
	DECLARE @DESCRIPTION NVARCHAR(4000)
	SELECT @CATEGORY = G_CATEGORY, @DESCRIPTION = LTRIM(RTRIM(ISNULL(G_SPEC_DESCRIPTION, '')))
	FROM GOODS
	WHERE G_MODELNO = @MODELNO;

	SELECT REF_ATTRIBUTE_ID
	     , REF_ATTRIBUTE_ELEMENT_ID
	INTO #GOODS_REFER_ATTRIBUTE
	FROM GOODS_REFER_ATTRIBUTE A
		INNER JOIN GOODS_CATALOG_ATTRIBUTE B ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID AND A.ATTRIBUTE_ELEMENT_ID = B.ATTRIBUTE_ELEMENT_ID
		INNER JOIN GOODS_CATEGORY_ATTRIBUTE C ON REF_ATTRIBUTE_ID = C.ATTRIBUTE_ID AND C.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) OR CATEGORY = LEFT(@CATEGORY, 6) OR CATEGORY = LEFT(@CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
	WHERE A.CATEGORY = LEFT(@CATEGORY, 4)
	  AND G_MODELNO = @MODELNO
	  AND DEL_YN = 'N'
	  AND A.ATTRIBUTE_ID <> REF_ATTRIBUTE_ID
	  AND A.ATTRIBUTE_ELEMENT_ID <> REF_ATTRIBUTE_ELEMENT_ID
	  AND REF_ATTRIBUTE_ID <> 0
	  AND REF_ATTRIBUTE_ELEMENT_ID <> 0
	
	UPDATE GOODS_CATALOG_ATTRIBUTE
	SET DEL_YN = 'N', INS_DATE = GETDATE(), UPD_DATE = GETDATE(), UPD_OPRT = 'MP_batch'
	FROM #GOODS_REFER_ATTRIBUTE A
		INNER JOIN GOODS_CATALOG_ATTRIBUTE B ON REF_ATTRIBUTE_ID = B.ATTRIBUTE_ID AND REF_ATTRIBUTE_ELEMENT_ID = B.ATTRIBUTE_ELEMENT_ID AND G_MODELNO = @MODELNO
	WHERE DEL_YN = 'Y'
	
	INSERT INTO GOODS_CATALOG_ATTRIBUTE(G_MODELNO, ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, INS_DATE, INS_OPRT, DEL_YN, UPD_DATE, UPD_OPRT)
	SELECT @MODELNO
	     , REF_ATTRIBUTE_ID
		 , REF_ATTRIBUTE_ELEMENT_ID
		 , GETDATE()
		 , 'MP_batch'
		 , 'N'
		 , GETDATE()
		 , 'MP_batch'
	FROM #GOODS_REFER_ATTRIBUTE A
		LEFT JOIN GOODS_CATALOG_ATTRIBUTE B ON REF_ATTRIBUTE_ID = B.ATTRIBUTE_ID AND REF_ATTRIBUTE_ELEMENT_ID = B.ATTRIBUTE_ELEMENT_ID AND G_MODELNO = @MODELNO
	WHERE G_MODELNO IS NULL
	
	UPDATE GOODS_CATALOG_ATTRIBUTE
	SET DEL_YN = 'Y', UPD_DATE = GETDATE(), UPD_OPRT = 'MP_batch'
	WHERE DEL_YN = 'N' AND G_MODELNO = @MODELNO AND ATTRIBUTE_ID NOT IN (
		SELECT DISTINCT A.ATTRIBUTE_ID
		FROM GOODS_ATTRIBUTE A
			INNER JOIN GOODS_CATEGORY_ATTRIBUTE B ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID AND B.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) OR CATEGORY = LEFT(@CATEGORY, 6) OR CATEGORY = LEFT(@CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
		WHERE DEL_YN = 'N'
		UNION ALL
		SELECT DISTINCT ATTRIBUTE_ID
		FROM GOODS_ATTRIBUTE
		WHERE CATEGORY = '')
	
	DECLARE @ALIKE_ATTRIBUTE INT
	DECLARE @UNUSED_ATTRIBUTE INT
	DECLARE @GENERAL_ATTRIBUTE INT
	DECLARE @MULTI_ATTRIBUTE INT
	SELECT @ALIKE_ATTRIBUTE = COUNT(DISTINCT CASE WHEN MANAGE_ATTRIBUTE_NM LIKE '유사_[중소미]분류' THEN 1 END)
	     , @UNUSED_ATTRIBUTE = COUNT(DISTINCT CASE WHEN MANAGE_ATTRIBUTE_NM LIKE '미사용%' THEN 1 END)
		 , @GENERAL_ATTRIBUTE = COUNT(DISTINCT CASE WHEN MANAGE_ATTRIBUTE_NM NOT LIKE '유사_[중소미]분류' AND MANAGE_ATTRIBUTE_NM NOT LIKE '미사용%' THEN 1 END)
	FROM GOODS_CATALOG_ATTRIBUTE A
		INNER JOIN GOODS_CATEGORY_ATTRIBUTE B ON B.ATTRIBUTE_ID = A.ATTRIBUTE_ID AND B.CATEGORY IN (SELECT TOP 1 CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) OR CATEGORY = LEFT(@CATEGORY, 6) OR CATEGORY = LEFT(@CATEGORY, 8) ORDER BY LEN(CATEGORY) DESC)
		INNER JOIN GOODS_ATTRIBUTE C ON C.ATTRIBUTE_ID = A.ATTRIBUTE_ID AND C.DEL_YN = 'N'
	WHERE A.G_MODELNO = @MODELNO AND A.DEL_YN = 'N'
	
	IF @UNUSED_ATTRIBUTE = 1 AND (@ALIKE_ATTRIBUTE = 1 OR @GENERAL_ATTRIBUTE = 1)
	BEGIN
		-- 미사용 속성 삭제
		UPDATE GOODS_CATALOG_ATTRIBUTE
		SET DEL_YN = 'Y', UPD_DATE = GETDATE(), UPD_OPRT = 'MP_batch'
		WHERE DEL_YN = 'N' AND G_MODELNO = @MODELNO
		  AND ATTRIBUTE_ID IN (SELECT ATTRIBUTE_ID FROM GOODS_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) AND DEL_YN = 'N' AND MANAGE_ATTRIBUTE_NM LIKE '미사용%')
	END
	
	IF @ALIKE_ATTRIBUTE = 1 AND @GENERAL_ATTRIBUTE = 1
	BEGIN
		-- 유사 속성 삭제
		UPDATE GOODS_CATALOG_ATTRIBUTE
		SET DEL_YN = 'Y', UPD_DATE = GETDATE(), UPD_OPRT = 'MP_batch'
		WHERE DEL_YN = 'N' AND G_MODELNO = @MODELNO
		  AND ATTRIBUTE_ID IN (SELECT ATTRIBUTE_ID FROM GOODS_ATTRIBUTE WHERE CATEGORY = LEFT(@CATEGORY, 4) AND DEL_YN = 'N' AND MANAGE_ATTRIBUTE_NM LIKE '유사_[중소미]분류')
	END
	
	SET @MULTI_ATTRIBUTE = @ALIKE_ATTRIBUTE + @UNUSED_ATTRIBUTE + @GENERAL_ATTRIBUTE
	IF @MULTI_ATTRIBUTE > 2
	BEGIN
		SET @MULTI_ATTRIBUTE = 2
	END
	ELSE IF (@MULTI_ATTRIBUTE = 1 AND @GENERAL_ATTRIBUTE = 1) OR @DESCRIPTION <> ''
	BEGIN
		-- 일반속성만 있거나 부가정보가 있는 경우
		SET @MULTI_ATTRIBUTE = 2
	END
	
	SELECT @MULTI_ATTRIBUTE
END
