/* *************************************************************************
 * NAME : dbo.UDP_MP_GOODS_GROUPING
 * TYPE : PROCEDURE (SQL_STORED_PROCEDURE)
 * TIME : Create: 2017-01-26 11:36:27.83
 *        Modify: 2018-05-03 17:23:34.28
 *        Backup: 20180521_1739
 ************************************************************************* */


CREATE PROC [DBO].[UDP_MP_GOODS_GROUPING]
	@CA_CODE VARCHAR(6),
	@MODELNO INT,
	@RANGE CHAR(1)		-- Y : 신규 그룹, N : 기존 그룹에 추가
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	----------------------------------------------------------
	--DECLARE @CA_CODE VARCHAR(6)
	--DECLARE @MODELNO INT
	--DECLARE @RANGE CHAR(1)
	
	--SET @CA_CODE = '211430'
	--SET @MODELNO = NULL
	--SET @RANGE = 'N'
	--DROP TABLE #TARGET
	--DROP TABLE #UPDATE_GOODS
	
	--DROP TABLE #GOODS
	--SELECT *
	--INTO #GOODS
	--FROM GOODS
	--WHERE LEFT(G_CATEGORY, 6) = @CA_CODE AND G_MODELNO_GROUP IN (14553386)
	
	--UPDATE #GOODS
	--SET G_FLAG = '1', G_MODELNO_GROUP = NULL, G_CONDITION_NUMBER = NULL, G_GROUP_FLAG = NULL, G_GROUP_ATTRIBUTE_ID = NULL
	--WHERE G_MODELNO < 14553386
	
	--DROP TABLE #GOODS_CATALOG_ATTRIBUTE
	--SELECT *
	--INTO #GOODS_CATALOG_ATTRIBUTE
	--FROM GOODS_CATALOG_ATTRIBUTE
	--WHERE G_MODELNO IN (SELECT G_MODELNO FROM #GOODS) AND G_MODELNO >= 14553386
	----------------------------------------------------------
	
	CREATE TABLE #TARGET(
		MODELNM VARCHAR(500),
		CATEGORY VARCHAR(6),
		MAKER INT,
		BRAND INT
	)
	
	CREATE TABLE #UPDATE_GOODS(
		MODELNO INT
	)
	
	DECLARE @QRY VARCHAR(8000)
	DECLARE @BATCH CHAR(1)
	
	-- 그룹핑할 대상 그룹 찾기
	SET @BATCH = 'Y'
	SET @QRY = 'INSERT INTO #TARGET(MODELNM, CATEGORY, MAKER, BRAND)' + CHAR(13) + CHAR(10) + 
	           'SELECT DISTINCT LTRIM(RTRIM(LEFT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))), LEFT(G_CATEGORY, 6), MAKER_ID, BRAND_ID' + CHAR(13) + CHAR(10) + 
			   'FROM GOODS' + CHAR(13) + CHAR(10) + 
			   'WHERE CHARINDEX(''@'', G_MODELNM) > 0' + CHAR(13) + CHAR(10)
	IF @CA_CODE IS NOT NULL
	BEGIN
		SET @QRY = @QRY + 'AND LEFT(G_CATEGORY, 6) = ''' + @CA_CODE + '''' + CHAR(13) + CHAR(10)
		IF @RANGE <> 'Y'
			SET @QRY = @QRY + 'AND G_MODELNO_GROUP IS NULL'
	END
	ELSE IF @MODELNO IS NOT NULL
	BEGIN
		SET @RANGE = 'Y'
		SET @QRY = @QRY + 'AND G_MODELNO = ' + CAST(@MODELNO AS VARCHAR(20))
	END
	ELSE
		SET @QRY = @QRY + 'AND G_MODELNO IS NULL '
	
	--PRINT @QRY
	EXEC (@QRY)
	
	----------------------------------------------------------
	--DECLARE @QRY VARCHAR(8000)
	--DECLARE @RANGE CHAR(1)
	--SET @RANGE = 'Y'
	--DECLARE @BATCH CHAR(1)
	--SET @BATCH = 'Y'
	----------------------------------------------------------
	DECLARE @MODELNM VARCHAR(500)
	DECLARE @CATEGORY VARCHAR(6)
	DECLARE @MAKER INT
	DECLARE @BRAND INT
	
	--DROP TABLE #TEMP
	CREATE TABLE #TEMP(
		G_MODELNO INT,
		G_MODELNO_GROUP INT
	)
	
	DECLARE FETCH_CURSOR CURSOR FOR
	SELECT MODELNM, CATEGORY, MAKER, BRAND
	FROM #TARGET
	
	OPEN FETCH_CURSOR
	
	FETCH NEXT FROM FETCH_CURSOR INTO @MODELNM, @CATEGORY, @MAKER, @BRAND
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF NOT(LTRIM(RTRIM(ISNULL(@MODELNM, ''))) = '' OR LTRIM(RTRIM(ISNULL(@CATEGORY, ''))) = '' OR @MAKER IS NULL OR @BRAND IS NULL OR
		       @CATEGORY = '221121' OR @CATEGORY = '221122' OR @CATEGORY = '224111' OR @CATEGORY = '224112' OR
		       @CATEGORY = '000000' OR @MODELNM = '모델삭제')
		BEGIN
			-- 대상 그룹의 대표모델번호 찾기
			SET @QRY = 'DELETE FROM #TEMP;' + CHAR(13) + CHAR(10) + 
			           'INSERT INTO #TEMP(G_MODELNO, G_MODELNO_GROUP)' + CHAR(13) + CHAR(10) +
			           'SELECT TOP 1 G_MODELNO, G_MODELNO_GROUP' + CHAR(13) + CHAR(10) + 
			           'FROM GOODS' + CHAR(13) + CHAR(10) + 
					   '	INNER JOIN GOODS_GROUP_CONDITION ON GGC_CATEGORY = LEFT(G_CATEGORY, 6) AND LTRIM(RTRIM(RIGHT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = GGC_NAME' + CHAR(13) + CHAR(10) + 
					   'WHERE LEFT(G_CATEGORY, 6) = ''' + @CATEGORY + ''' AND LTRIM(RTRIM(LEFT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = ''' + @MODELNM + ''' AND MAKER_ID = ' + CAST(@MAKER AS VARCHAR(20)) + ' AND BRAND_ID = ' + CAST(@BRAND AS VARCHAR(20)) + CHAR(13) + CHAR(10) + 
					   'ORDER BY G_MODELNO_GROUP DESC, GGC_SORT, GGC_NAME'
			IF @RANGE <> 'Y'
				SET @QRY = REPLACE(@QRY, 'ORDER BY G_MODELNO_GROUP DESC, GGC_SORT, GGC_NAME', 'ORDER BY GGC_SORT, GGC_NAME')
			--PRINT @QRY
			EXEC (@QRY)
			
			-- 그룹핑
			SET @QRY = 'DELETE FROM #UPDATE_GOODS;' + CHAR(13) + CHAR(10) + 
			           'UPDATE GOODS' + CHAR(13) + CHAR(10) + 
					   'SET G_FLAG = ''1'', G_MODELNO_GROUP = (SELECT (CASE WHEN ''' + @RANGE + ''' = ''Y'' THEN G_MODELNO ELSE ISNULL(G_MODELNO_GROUP, G_MODELNO) END) FROM #TEMP), G_CONDITION_NUMBER = GGC_NUMBER, G_GROUP_FLAG = (CASE WHEN G_MODELNO = (SELECT (CASE WHEN ''' + @RANGE + ''' = ''Y'' THEN G_MODELNO ELSE ISNULL(G_MODELNO_GROUP, G_MODELNO) END) FROM #TEMP) THEN ''1'' ELSE ''0'' END), G_GROUP_ATTRIBUTE_ID = (SELECT ATTRIBUTE_ID FROM GOODS_ATTRIBUTE WHERE DEL_YN = ''N'' AND CATEGORY = '''' AND MANAGE_ATTRIBUTE_NM = ''조건명_' + LEFT(@CATEGORY, 4) + ''')' + CHAR(13) + CHAR(10) + 
					   'OUTPUT DELETED.G_MODELNO INTO #UPDATE_GOODS' + CHAR(13) + CHAR(10) + 
					   'FROM GOODS' + CHAR(13) + CHAR(10) + 
					   '	INNER JOIN GOODS_GROUP_CONDITION ON GGC_CATEGORY = LEFT(G_CATEGORY, 6) AND LTRIM(RTRIM(RIGHT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = GGC_NAME' + CHAR(13) + CHAR(10) + 
					   'WHERE LEFT(G_CATEGORY, 6) = ''' + @CATEGORY + ''' AND LTRIM(RTRIM(LEFT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = ''' + @MODELNM + ''' AND MAKER_ID = ' + CAST(@MAKER AS VARCHAR(20)) + ' AND BRAND_ID = ' + CAST(@BRAND AS VARCHAR(20)) + CHAR(13) + CHAR(10)
			IF @RANGE <> 'Y'
				SET @QRY = @QRY + 'AND G_MODELNO_GROUP IS NULL'
			--PRINT @QRY
			EXEC (@QRY)
			
			-- 처리 후 조건명이 없어 그룹핑되지 않은 모델 확인
			IF @BATCH <> 'N'
			BEGIN
				SET @QRY = 'DELETE FROM #TEMP;' + CHAR(13) + CHAR(10) + 
						   'INSERT INTO #TEMP(G_MODELNO, G_MODELNO_GROUP)' + CHAR(13) + CHAR(10) +
						   'SELECT G_MODELNO, G_MODELNO_GROUP' + CHAR(13) + CHAR(10) + 
						   'FROM GOODS' + CHAR(13) + CHAR(10) + 
						   '	LEFT JOIN GOODS_GROUP_CONDITION ON GGC_CATEGORY = LEFT(G_CATEGORY, 6) AND LTRIM(RTRIM(RIGHT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = GGC_NAME' + CHAR(13) + CHAR(10) + 
						   'WHERE GGC_NO IS NULL AND LEFT(G_CATEGORY, 6) = ''' + @CATEGORY + ''' AND LTRIM(RTRIM(LEFT(LTRIM(RTRIM(G_MODELNM)), LEN(LTRIM(RTRIM(G_MODELNM))) - CHARINDEX(''@'', LTRIM(RTRIM(G_MODELNM)))))) = ''' + @MODELNM + ''' AND MAKER_ID = ' + CAST(@MAKER AS VARCHAR(20)) + ' AND BRAND_ID = ' + CAST(@BRAND AS VARCHAR(20)) + CHAR(13) + CHAR(10)
				IF @RANGE <> 'Y'
					SET @QRY = @QRY + 'AND G_MODELNO_GROUP IS NULL'
				--PRINT @QRY
				EXEC (@QRY)
				
				IF (SELECT COUNT(*) FROM #TEMP) > 0
					SET @BATCH = 'N'
			END
			
			-- 조건명 카탈 속성 작업
			DECLARE CONDI_CURSOR CURSOR FOR
			SELECT 'EXEC UDP_MP_GOODS_ATTRIBUTE_CONDITION ' + CAST(MODELNO AS VARCHAR(20))
			FROM #UPDATE_GOODS
			
			OPEN CONDI_CURSOR
			
			FETCH NEXT FROM CONDI_CURSOR INTO @QRY
			WHILE @@FETCH_STATUS = 0
			BEGIN
				EXEC (@QRY)
				
				FETCH NEXT FROM CONDI_CURSOR INTO @QRY
			END
			
			CLOSE CONDI_CURSOR
			DEALLOCATE CONDI_CURSOR
		END
		
		FETCH NEXT FROM FETCH_CURSOR INTO @MODELNM, @CATEGORY, @MAKER, @BRAND
	END
	
	CLOSE FETCH_CURSOR
	DEALLOCATE FETCH_CURSOR
END
