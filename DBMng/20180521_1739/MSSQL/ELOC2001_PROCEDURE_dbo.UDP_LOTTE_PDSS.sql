/* *************************************************************************
 * NAME : dbo.UDP_LOTTE_PDSS
 * TYPE : PROCEDURE (SQL_STORED_PROCEDURE)
 * TIME : Create: 2018-05-13 16:09:37.8
 *        Modify: 2018-05-16 14:41:40.353
 *        Backup: 20180521_1739
 ************************************************************************* */


CREATE PROC [DBO].[UDP_LOTTE_PDSS]
	@TYPE CHAR(1)		-- 'T' : TOTAL(전체), 'C' : CHANGE(변경)
AS
BEGIN
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
	
	IF (@TYPE = 'T' AND OBJECT_ID('TBL_PDSS_LOTTE_SEND_TOP100')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_TOP100
	
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_CATEGORY')			IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_CATEGORY
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_ATTRIBUTE')			IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_ATTRIBUTE
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_ATTRIBUTE_ELEMENT')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_ATTRIBUTE_ELEMENT
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATEGORY')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATEGORY
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_CATALOG')			IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_CATALOG
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATALOG')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATALOG
	IF (OBJECT_ID('TBL_PDSS_LOTTE_SEND_EP')					IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_SEND_EP
	
	IF (OBJECT_ID('TBL_PDSS_LOTTE_CATEGORY_OLD')			IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_CATEGORY_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_OLD')			IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_ATTRIBUTE_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT_OLD')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY_OLD')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_CATALOG_OLD')				IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_CATALOG_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG_OLD')	IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_EP_OLD')					IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_EP_OLD
	
	IF (OBJECT_ID('TBL_PDSS_LOTTE_CATEGORY')			IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_CATEGORY			, TBL_PDSS_LOTTE_CATEGORY_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE')			IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_ATTRIBUTE			, TBL_PDSS_LOTTE_ATTRIBUTE_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT')	IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT	, TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY')	IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY, TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_CATALOG')				IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_CATALOG			, TBL_PDSS_LOTTE_CATALOG_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG')	IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG	, TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_EP')					IS NOT NULL)	EXEC SP_RENAME TBL_PDSS_LOTTE_EP				, TBL_PDSS_LOTTE_EP_OLD
	IF (OBJECT_ID('TBL_PDSS_LOTTE_TOP100')				IS NOT NULL)	DROP TABLE TBL_PDSS_LOTTE_TOP100
	
	-- 타켓 선정
	EXEC UDP_LOTTE_PDSS_TARGET @TYPE, 8073
	
	------------------------------------------------------------------------------------------
	-- 통합 외부속성
	SELECT /* UDP_LOTTE_PDSS:01 */
		   DISTINCT CATEGORY, ATTRIBUTE_ID
	INTO #EXTERNAL_ATTRIBUTE
	FROM TBL_EXTERNAL_ATTRIBUTE
	WHERE SHOP_CODE IN (8073)
	OPTION (MAXDOP 1)
	
	SELECT /* UDP_LOTTE_PDSS:02 */
		   PL_MODELNO, PL_NO, PL_VCODE, PL_GOODSCODE, PL_PRICE, PL_GOODSNM, PL_FREEINTEREST, PL_DELIVERY_LEV
	INTO #TARGET_PRICELIST
	FROM PRICELIST
	WHERE PL_VCODE IN (8073) AND PL_MODELNO > 0 AND PL_STATUS = '4' AND PL_SRVFLAG = '4'
	OPTION (MAXDOP 1)
	
	------------------------------------------------------------------------------------------
	-- 카테고리 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:03 */
	       CATEGORY, CAST(CATEGORY_NAME AS VARCHAR(120)) CATEGORY_NAME, CATEGORY_LEVEL, CATEGORY_SEQNO, CAST(CATEGORY_FULL_NAME AS VARCHAR(500)) CATEGORY_FULL_NAME, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_CATEGORY
	FROM (
		SELECT CAST(CL_LCODE AS VARCHAR(12)) CATEGORY, 1 CATEGORY_LEVEL
			 , CAST(ISNULL(CL_NAME, '') AS VARCHAR(100)) CATEGORY_NAME
			 , CASE WHEN CHARINDEX('temp', CL_NAME) > 0 THEN 0 ELSE CL_SEQNO END CATEGORY_SEQNO
			 , CAST(ISNULL(CL_NAME, '') AS VARCHAR(500)) CATEGORY_FULL_NAME
		FROM C_LCATE
		WHERE LEN(LTRIM(RTRIM(CL_LCODE))) = 2
		  AND CL_LCODE IN (SELECT LEFT(CATEGORY, 2) FROM #EXTERNAL_ATTRIBUTE)
		UNION ALL
		SELECT B.CM_LCODE + B.CM_MCODE, 2
			 , ISNULL(B.CM_NAME, '')
			 , CASE WHEN CHARINDEX('temp', A.CL_NAME) > 0 OR CHARINDEX('temp', B.CM_NAME) > 0
						 OR A.CL_SEQNO = 0 THEN 0 ELSE B.CM_SEQNO END
			 , ISNULL(A.CL_NAME, '') + '@' + ISNULL(B.CM_NAME, '')
		FROM C_LCATE A
			INNER JOIN C_MCATE B ON A.CL_LCODE = B.CM_LCODE
		WHERE LEN(LTRIM(RTRIM(A.CL_LCODE))) = 2 AND LEN(LTRIM(RTRIM(B.CM_MCODE))) = 2
		  AND B.CM_LCODE + B.CM_MCODE IN (SELECT LEFT(CATEGORY, 4) FROM #EXTERNAL_ATTRIBUTE)
		UNION ALL
		SELECT C.CS_LCODE + C.CS_MCODE + C.CS_SCODE, 3
			 , ISNULL(CASE WHEN CHARINDEX('_', C.CS_NAME) > 0 THEN SUBSTRING(C.CS_NAME, 1, CHARINDEX('_', C.CS_NAME) - 1) ELSE C.CS_NAME END, '')
			 , CASE WHEN CHARINDEX('temp', A.CL_NAME) > 0 OR CHARINDEX('temp', B.CM_NAME) > 0 OR CHARINDEX('temp', C.CS_NAME) > 0
						 OR A.CL_SEQNO = 0 OR B.CM_SEQNO = 0 THEN 0 ELSE C.CS_SEQNO END
			 , ISNULL(A.CL_NAME, '') + '@' + ISNULL(B.CM_NAME, '')
			   + '@' + ISNULL(CASE WHEN CHARINDEX('_', C.CS_NAME) > 0 THEN SUBSTRING(C.CS_NAME, 1, CHARINDEX('_', C.CS_NAME) - 1) ELSE C.CS_NAME END, '')
		FROM C_LCATE A
			INNER JOIN C_MCATE B ON A.CL_LCODE = B.CM_LCODE
			INNER JOIN C_SCATE C ON B.CM_LCODE = C.CS_LCODE AND B.CM_MCODE = C.CS_MCODE
		WHERE LEN(LTRIM(RTRIM(A.CL_LCODE))) = 2 AND LEN(LTRIM(RTRIM(B.CM_MCODE))) = 2 AND LEN(LTRIM(RTRIM(C.CS_SCODE))) = 2
		  AND C.CS_LCODE + C.CS_MCODE + C.CS_SCODE IN (SELECT LEFT(CATEGORY, 6) FROM #EXTERNAL_ATTRIBUTE)
		UNION ALL
		SELECT D.CD_LCODE + D.CD_MCODE + D.CD_SCODE + D.CD_DCODE, 4
			 , ISNULL(CASE WHEN CHARINDEX('_', D.CD_NAME) > 0 THEN SUBSTRING(D.CD_NAME, 1, CHARINDEX('_', D.CD_NAME) - 1) ELSE D.CD_NAME END, '')
			 , CASE WHEN CHARINDEX('temp', A.CL_NAME) > 0 OR CHARINDEX('temp', B.CM_NAME) > 0 OR CHARINDEX('temp', C.CS_NAME) > 0 OR CHARINDEX('temp', D.CD_NAME) > 0
						 OR A.CL_SEQNO = 0 OR B.CM_SEQNO = 0 OR C.CS_SEQNO = 0 THEN 0 ELSE D.CD_SEQNO END
			 , ISNULL(A.CL_NAME, '') + '@' + ISNULL(B.CM_NAME, '')
			   + '@' + ISNULL(CASE WHEN CHARINDEX('_', C.CS_NAME) > 0 THEN SUBSTRING(C.CS_NAME, 1, CHARINDEX('_', C.CS_NAME) - 1) ELSE C.CS_NAME END, '')
			   + '@' + ISNULL(CASE WHEN CHARINDEX('_', D.CD_NAME) > 0 THEN SUBSTRING(D.CD_NAME, 1, CHARINDEX('_', D.CD_NAME) - 1) ELSE D.CD_NAME END, '')
		FROM C_LCATE A
			INNER JOIN C_MCATE B ON A.CL_LCODE = B.CM_LCODE
			INNER JOIN C_SCATE C ON B.CM_LCODE = C.CS_LCODE AND B.CM_MCODE = C.CS_MCODE
			INNER JOIN C_DCATE D ON C.CS_LCODE = D.CD_LCODE AND C.CS_MCODE = D.CD_MCODE AND C.CS_SCODE = D.CD_SCODE
		WHERE LEN(LTRIM(RTRIM(A.CL_LCODE))) = 2 AND LEN(LTRIM(RTRIM(B.CM_MCODE))) = 2 AND LEN(LTRIM(RTRIM(C.CS_SCODE))) = 2 AND LEN(LTRIM(RTRIM(D.CD_DCODE))) = 2
		  AND D.CD_LCODE + D.CD_MCODE + D.CD_SCODE IN (SELECT LEFT(CATEGORY, 6) FROM #EXTERNAL_ATTRIBUTE)
	) A
	OPTION (MAXDOP 1)
	CREATE NONCLUSTERED INDEX [NCL_PDSS_LOTTE_CATEGORY] ON TBL_PDSS_LOTTE_CATEGORY(CATEGORY ASC)
	
	-- 속성 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:04 */
	       ATTRIBUTE_ID, CATEGORY, MANAGE_ATTRIBUTE_NM, GALLERY_ATTRIBUTE_NM, IS_GALLERY_DISPLAY, USE_CLASS_CODE, IS_UNIT, UNIT_NM, INS_DATE, UPD_DATE, DEL_YN, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_ATTRIBUTE
	FROM GOODS_ATTRIBUTE
	WHERE USE_CLASS_CODE < '3' AND MANAGE_ATTRIBUTE_NM NOT LIKE '유사_[중소미]분류'
	  AND CATEGORY IN (SELECT LEFT(CATEGORY, 4) FROM TBL_PDSS_LOTTE_CATEGORY)
	  AND LEN(LTRIM(RTRIM(CATEGORY))) = 4
	OPTION (MAXDOP 1)
	ALTER TABLE TBL_PDSS_LOTTE_ATTRIBUTE ADD PRIMARY KEY CLUSTERED(ATTRIBUTE_ID ASC)
	
	-- 속성원 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:05 */
	       ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, ATTRIBUTE_ELEMENT, DISPLAY_ORDER, INS_DATE, UPD_DATE, DEL_YN, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT
	FROM GOODS_ATTRIBUTE_ELEMENT
	WHERE ATTRIBUTE_ID IN (SELECT ATTRIBUTE_ID FROM TBL_PDSS_LOTTE_ATTRIBUTE)
	OPTION (MAXDOP 1)
	ALTER TABLE TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT ADD PRIMARY KEY CLUSTERED(ATTRIBUTE_ID ASC, ATTRIBUTE_ELEMENT_ID ASC)
	
	-- 카테고리 속성 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:06 */
	       CATEGORY, ATTRIBUTE_ID, DISPLAY_ORDER, INS_DATE, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY
	FROM GOODS_CATEGORY_ATTRIBUTE
	WHERE ATTRIBUTE_ID IN (SELECT DISTINCT ATTRIBUTE_ID FROM TBL_PDSS_LOTTE_ATTRIBUTE)
	  AND CATEGORY IN (SELECT CATEGORY FROM TBL_PDSS_LOTTE_CATEGORY)
	OPTION (MAXDOP 1)
	ALTER TABLE TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY ADD PRIMARY KEY CLUSTERED(CATEGORY ASC, ATTRIBUTE_ID ASC)
	--------------------------------------------------------------------------------------------------------
	
	--------------------------------------------------------------------------------------------------------
	-- 카탈로그 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:07 */
		   B.G_MODELNO
	INTO #TARGET_GOODS
	FROM #TARGET_PRICELIST A
		INNER JOIN GOODS B ON A.PL_MODELNO = B.G_MODELNO
		INNER JOIN #EXTERNAL_ATTRIBUTE C ON C.CATEGORY = LEFT(B.G_CATEGORY, LEN(C.CATEGORY)) AND C.ATTRIBUTE_ID > 0
		INNER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY D ON C.ATTRIBUTE_ID = D.ATTRIBUTE_ID AND D.CATEGORY IN (SELECT TOP 1 E.CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE E WHERE E.CATEGORY = LEFT(B.G_CATEGORY, 4) OR E.CATEGORY = LEFT(B.G_CATEGORY, 6) OR E.CATEGORY = LEFT(B.G_CATEGORY, 8) ORDER BY LEN(E.CATEGORY) DESC)
		INNER JOIN GOODS_CATALOG_ATTRIBUTE F ON B.G_MODELNO = F.G_MODELNO AND C.ATTRIBUTE_ID = F.ATTRIBUTE_ID AND F.DEL_YN = 'N'
	WHERE B.G_CONSTRAIN <> '5'
	OPTION (MAXDOP 1)
	
	SELECT /* UDP_LOTTE_PDSS:08 */
	       A.G_MODELNO
		 , CASE WHEN CHARINDEX('@', A.G_MODELNM) > 0 THEN SUBSTRING(A.G_MODELNM, 1, CHARINDEX('@', A.G_MODELNM) - 1) + '[' + SUBSTRING(A.G_MODELNM, CHARINDEX('@', A.G_MODELNM) + 1, 500) + ']' ELSE A.G_MODELNM END G_MODELNM
		 , CASE WHEN A.G_MODELNO_GROUP IS NOT NULL AND CHARINDEX('@', A.G_MODELNM) > 0 THEN SUBSTRING(A.G_MODELNM, CHARINDEX('@', A.G_MODELNM) + 1, 500) ELSE '' END G_CONDI_NAME
		 , A.G_MODELNO_GROUP, A.G_FACTORY, A.G_BRAND, A.G_CATEGORY, A.G_IMGCHK3, A.G_DATE, ISNULL(B.G_POPULAR, 0) G_POPULAR, GETDATE() MODDATE
		 , CASE WHEN LTRIM(RTRIM(ISNULL(A.G_U_NIT, ''))) <> '' THEN ISNULL(A.G_STANDARD, 1) ELSE NULL END G_STANDARD
		 , CASE WHEN LTRIM(RTRIM(ISNULL(A.G_U_NIT, ''))) <> '' THEN ISNULL(A.G_AMOUNT, 1) ELSE NULL END G_AMOUNT
		 , CASE WHEN LTRIM(RTRIM(ISNULL(A.G_U_NIT, ''))) <> '' THEN ISNULL(A.G_CHANGE, 1) ELSE NULL END G_CHANGE
		 , CASE WHEN LTRIM(RTRIM(ISNULL(A.G_U_NIT, ''))) <> '' THEN A.G_U_NIT ELSE NULL END G_UNIT
		 , ISNULL(B.G_MINPRICE, 0) G_MINPRICE
		 , GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_CATALOG
	FROM GOODS A
		LEFT JOIN GOODS_SUM B ON A.G_MODELNO = B.G_MODELNO
	WHERE A.G_MODELNO IN (SELECT G_MODELNO FROM #TARGET_GOODS) AND A.G_CONSTRAIN <> '5'
	  AND A.G_CATEGORY IN (SELECT LEFT(CATEGORY + '00000000', 8) FROM TBL_PDSS_LOTTE_CATEGORY)
	OPTION (MAXDOP 1)
	ALTER TABLE TBL_PDSS_LOTTE_CATALOG ADD PRIMARY KEY CLUSTERED(G_MODELNO ASC)
	
	-- 카탈속성 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:09 */
	       B.G_MODELNO, B.ATTRIBUTE_ID, B.ATTRIBUTE_ELEMENT_ID, ISNULL((CASE WHEN E.USE_CLASS_CODE = '2' THEN B.ATTRIBUTE_VALUE ELSE '' END), '') ATTRIBUTE_VALUE, B.INS_DATE, B.UPD_DATE, B.DEL_YN, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG
	FROM TBL_PDSS_LOTTE_CATALOG A
		INNER JOIN GOODS_CATALOG_ATTRIBUTE B ON A.G_MODELNO = B.G_MODELNO
		INNER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY C ON B.ATTRIBUTE_ID = C.ATTRIBUTE_ID AND C.CATEGORY IN (SELECT TOP 1 D.CATEGORY FROM GOODS_CATEGORY_ATTRIBUTE D WHERE D.CATEGORY = LEFT(A.G_CATEGORY, 4) OR D.CATEGORY = LEFT(A.G_CATEGORY, 6) OR D.CATEGORY = LEFT(A.G_CATEGORY, 8) ORDER BY LEN(D.CATEGORY) DESC)
		INNER JOIN TBL_PDSS_LOTTE_ATTRIBUTE E ON B.ATTRIBUTE_ID = E.ATTRIBUTE_ID
		INNER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT F ON B.ATTRIBUTE_ID = F.ATTRIBUTE_ID AND B.ATTRIBUTE_ELEMENT_ID = F.ATTRIBUTE_ELEMENT_ID
	OPTION (MAXDOP 1)
	ALTER TABLE TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG ADD PRIMARY KEY CLUSTERED(G_MODELNO ASC, ATTRIBUTE_ID ASC, ATTRIBUTE_ELEMENT_ID ASC)
	CREATE NONCLUSTERED INDEX [NCL_PDSS_LOTTE_ATTRIBUTE_CATALOG] ON TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG(ATTRIBUTE_ID ASC, ATTRIBUTE_ELEMENT_ID ASC)
	
	-- 카탈로그 보정
	DELETE /* UDP_LOTTE_PDSS:10 */ FROM TBL_PDSS_LOTTE_CATALOG
	WHERE G_MODELNO NOT IN (SELECT G_MODELNO FROM TBL_PDSS_LOTTE_CATALOG)
	OPTION (MAXDOP 1)
	
	-- 매칭 (ELOC)
	SELECT /* UDP_LOTTE_PDSS:11 */
	       PL_MODELNO, PL_NO, PL_VCODE, PL_GOODSCODE, PL_PRICE, PL_GOODSNM, PL_FREEINTEREST, PL_DELIVERY_LEV, GETDATE() EXTRACT_DATE
	INTO TBL_PDSS_LOTTE_EP
	FROM #TARGET_PRICELIST
	WHERE PL_MODELNO IN (SELECT G_MODELNO FROM TBL_PDSS_LOTTE_CATALOG)
	OPTION (MAXDOP 1)
	CREATE NONCLUSTERED INDEX [NCL_PDSS_LOTTE_EP_01] ON TBL_PDSS_LOTTE_EP(PL_NO ASC)
	CREATE NONCLUSTERED INDEX [NCL_PDSS_LOTTE_EP_02] ON TBL_PDSS_LOTTE_EP(PL_MODELNO ASC)
	
	--------------------------------------------------------------------------------------------------------
	-- 전송 데이터 TARGET
	IF (@TYPE = 'T')
	BEGIN
		SELECT /* UDP_LOTTE_PDSS:12 */
		       CATEGORY,/* CATEGORY_NAME, CATEGORY_LEVEL, CATEGORY_SEQNO,*/ CATEGORY_FULL_NAME, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_CATEGORY
		FROM TBL_PDSS_LOTTE_CATEGORY
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:13 */
		       ATTRIBUTE_ID,/* CATEGORY,*/ MANAGE_ATTRIBUTE_NM, GALLERY_ATTRIBUTE_NM,/* IS_GALLERY_DISPLAY,*/ USE_CLASS_CODE, IS_UNIT, UNIT_NM, INS_DATE, UPD_DATE, DEL_YN, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE
		FROM TBL_PDSS_LOTTE_ATTRIBUTE
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:14 */
		       ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, ATTRIBUTE_ELEMENT, DISPLAY_ORDER, INS_DATE, UPD_DATE, DEL_YN, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_ELEMENT
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:15 */
		       CATEGORY, ATTRIBUTE_ID,/* DISPLAY_ORDER,*/ INS_DATE, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATEGORY
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:16 */
		       G_MODELNO, G_MODELNM, G_CONDI_NAME, G_MODELNO_GROUP, G_FACTORY, G_BRAND, G_CATEGORY, G_IMGCHK3, G_DATE, G_POPULAR, MODDATE, G_STANDARD, G_AMOUNT, G_CHANGE, G_UNIT, G_MINPRICE, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_CATALOG
		FROM TBL_PDSS_LOTTE_CATALOG
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:17 */
		       G_MODELNO, ATTRIBUTE_ID, ATTRIBUTE_ELEMENT_ID, ATTRIBUTE_VALUE, INS_DATE, UPD_DATE, DEL_YN, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATALOG
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:18 */
		       PL_MODELNO, PL_NO, PL_VCODE, PL_GOODSCODE, PL_PRICE, PL_GOODSNM, PL_FREEINTEREST, PL_DELIVERY_LEV, 'N' CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_EP
		FROM TBL_PDSS_LOTTE_EP
		OPTION (MAXDOP 1)
		
		--------------------------------------------------------------------------------------------------------
		-- 인기상품 TOP100
		SELECT *
		INTO #VIEW_CATE
		FROM VIEW_CATE
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:19 */
			   A.CATEGORY, A.MODELNO, A.MODELNO_GROUP, A.POPULAR, A.USE_POPULAR, A.MCATE_RANK, A.GROUP_RANK, GETDATE() EXTRACT_DATE
		INTO TBL_PDSS_LOTTE_TOP100
		FROM (
			SELECT A.CATEGORY, A.MODELNO, A.MODELNO_GROUP, A.POPULAR, A.USE_POPULAR, A.MCATE_RANK
				 , DENSE_RANK() OVER(PARTITION BY A.CATEGORY, A.MCATE_RANK ORDER BY A.POPULAR DESC, A.MODELNO DESC) GROUP_RANK
			FROM (
				SELECT LEFT(CATEGORY, 4) CATEGORY
					 , MODELNO, MODELNO_GROUP, POPULAR, USE_POPULAR
					 , DENSE_RANK() OVER(PARTITION BY LEFT(CATEGORY, 4) ORDER BY USE_POPULAR DESC, ISNULL(MODELNO_GROUP, MODELNO) DESC) MCATE_RANK
				FROM TBL_MCATE_POPULAR_RANK
				WHERE MCATE_GROUP_RANK <= 150
				  AND EXISTS (SELECT TOP 1 1 FROM GOODS WHERE MODELNO = G_MODELNO AND G_CATEGORY <> '00000000' AND G_MODELNM <> '모델삭제')
			) A
		) A
		WHERE A.MCATE_RANK <= 100 AND A.GROUP_RANK = 1
		OPTION (MAXDOP 1)
		ALTER TABLE TBL_PDSS_LOTTE_TOP100 ADD PRIMARY KEY CLUSTERED(MODELNO ASC)
		
		SELECT /* UDP_LOTTE_PDSS:20 */
			   B.G_MODELNO
			 , CASE WHEN CHARINDEX('@', B.G_MODELNM) > 0 THEN SUBSTRING(B.G_MODELNM, 1, CHARINDEX('@', B.G_MODELNM) - 1) + '[' + SUBSTRING(B.G_MODELNM, CHARINDEX('@', B.G_MODELNM) + 1, 500) + ']' ELSE B.G_MODELNM END G_MODELNM
			 , CASE WHEN B.G_MODELNO_GROUP IS NOT NULL AND CHARINDEX('@', B.G_MODELNM) > 0 THEN SUBSTRING(B.G_MODELNM, CHARINDEX('@', B.G_MODELNM) + 1, 500) ELSE '' END G_CONDI_NAME
			 , SUBSTRING(B.G_CATEGORY, 1, 2) LCODE, ISNULL(C.CL_NAME, '') LNAME
			 , SUBSTRING(B.G_CATEGORY, 1, 4) MCODE, ISNULL(C.CM_NAME, '') MNAME
			 , SUBSTRING(B.G_CATEGORY, 1, 6) SCODE, ISNULL(CASE WHEN CHARINDEX('_', C.CS_NAME) > 0 THEN SUBSTRING(C.CS_NAME, 1, CHARINDEX('_', C.CS_NAME) - 1) ELSE C.CS_NAME END, '') SNAME
			 , SUBSTRING(B.G_CATEGORY, 1, 8) DCODE, ISNULL(CASE WHEN CHARINDEX('_', C.CD_NAME) > 0 THEN SUBSTRING(C.CD_NAME, 1, CHARINDEX('_', C.CD_NAME) - 1) ELSE C.CD_NAME END, '') DNAME
			 , B.G_DATE, GETDATE() MODDATE
			 , A.MCATE_RANK
			 , ISNULL(D.G_MINPRICE, 0) G_MINPRICE
		INTO TBL_PDSS_LOTTE_SEND_TOP100
		FROM TBL_PDSS_LOTTE_TOP100 A
			INNER JOIN GOODS B ON A.MODELNO = B.G_MODELNO
			LEFT JOIN GOODS_SUM D ON B.G_MODELNO = D.G_MODELNO
			LEFT JOIN #VIEW_CATE C ON B.G_CATEGORY = C.CATEGORY
		OPTION (MAXDOP 1)
		
		DROP TABLE #VIEW_CATE
		--------------------------------------------------------------------------------------------------------
		
		EXEC UDP_LOTTE_PDSS_STATS 8073		--업체별 통계인지 확인 필요
	END
	ELSE
	BEGIN
		SELECT /* UDP_LOTTE_PDSS:21 */
		       CASE WHEN A.CATEGORY IS NULL THEN B.CATEGORY ELSE A.CATEGORY END CATEGORY
			 --, CASE WHEN A.CATEGORY IS NULL THEN B.CATEGORY_NAME ELSE A.CATEGORY_NAME END CATEGORY_NAME
			 --, CASE WHEN A.CATEGORY IS NULL THEN B.CATEGORY_LEVEL ELSE A.CATEGORY_LEVEL END CATEGORY_LEVEL
			 --, CASE WHEN A.CATEGORY IS NULL THEN B.CATEGORY_SEQNO ELSE A.CATEGORY_SEQNO END CATEGORY_SEQNO
			 , CASE WHEN A.CATEGORY IS NULL THEN B.CATEGORY_FULL_NAME ELSE A.CATEGORY_FULL_NAME END CATEGORY_FULL_NAME
			 , CASE WHEN A.CATEGORY IS NULL THEN 'D' WHEN B.CATEGORY IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_CATEGORY
		FROM TBL_PDSS_LOTTE_CATEGORY A
			FULL OUTER JOIN TBL_PDSS_LOTTE_CATEGORY_OLD B ON A.CATEGORY = B.CATEGORY
		WHERE A.CATEGORY IS NULL OR B.CATEGORY IS NULL
		   OR A.CATEGORY_FULL_NAME <> B.CATEGORY_FULL_NAME
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:22 */
		       CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.ATTRIBUTE_ID ELSE A.ATTRIBUTE_ID END ATTRIBUTE_ID
			 --, CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.CATEGORY ELSE A.CATEGORY END CATEGORY
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.MANAGE_ATTRIBUTE_NM ELSE A.MANAGE_ATTRIBUTE_NM END MANAGE_ATTRIBUTE_NM
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.GALLERY_ATTRIBUTE_NM ELSE A.GALLERY_ATTRIBUTE_NM END GALLERY_ATTRIBUTE_NM
			 --, CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.IS_GALLERY_DISPLAY ELSE A.IS_GALLERY_DISPLAY END IS_GALLERY_DISPLAY
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.USE_CLASS_CODE ELSE A.USE_CLASS_CODE END USE_CLASS_CODE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.IS_UNIT ELSE A.IS_UNIT END IS_UNIT
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.UNIT_NM ELSE A.UNIT_NM END UNIT_NM
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.INS_DATE ELSE A.INS_DATE END INS_DATE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.UPD_DATE ELSE A.UPD_DATE END UPD_DATE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.DEL_YN ELSE A.DEL_YN END DEL_YN
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN 'D' WHEN B.ATTRIBUTE_ID IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE
		FROM TBL_PDSS_LOTTE_ATTRIBUTE A
			FULL OUTER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_OLD B ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
		WHERE A.ATTRIBUTE_ID IS NULL OR B.ATTRIBUTE_ID IS NULL
		   OR A.INS_DATE <> B.INS_DATE OR A.UPD_DATE <> B.UPD_DATE
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:23 */
		       CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.ATTRIBUTE_ID ELSE A.ATTRIBUTE_ID END ATTRIBUTE_ID
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.ATTRIBUTE_ELEMENT_ID ELSE A.ATTRIBUTE_ELEMENT_ID END ATTRIBUTE_ELEMENT_ID
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.ATTRIBUTE_ELEMENT ELSE A.ATTRIBUTE_ELEMENT END ATTRIBUTE_ELEMENT
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.DISPLAY_ORDER ELSE A.DISPLAY_ORDER END DISPLAY_ORDER
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.INS_DATE ELSE A.INS_DATE END INS_DATE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.UPD_DATE ELSE A.UPD_DATE END UPD_DATE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.DEL_YN ELSE A.DEL_YN END DEL_YN
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN 'D' WHEN B.ATTRIBUTE_ID IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_ELEMENT
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT A
			FULL OUTER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_ELEMENT_OLD B ON A.ATTRIBUTE_ID = B.ATTRIBUTE_ID AND A.ATTRIBUTE_ELEMENT_ID = B.ATTRIBUTE_ELEMENT_ID
		WHERE A.ATTRIBUTE_ID IS NULL OR B.ATTRIBUTE_ID IS NULL
		   OR A.INS_DATE <> B.INS_DATE OR A.UPD_DATE <> B.UPD_DATE
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:24 */
		       CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.CATEGORY ELSE A.CATEGORY END CATEGORY
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.ATTRIBUTE_ID ELSE A.ATTRIBUTE_ID END ATTRIBUTE_ID
			 --, CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.DISPLAY_ORDER ELSE A.DISPLAY_ORDER END DISPLAY_ORDER
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN B.INS_DATE ELSE A.INS_DATE END INS_DATE
			 , CASE WHEN A.ATTRIBUTE_ID IS NULL THEN 'D' WHEN B.ATTRIBUTE_ID IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATEGORY
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY A
			FULL OUTER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_CATEGORY_OLD B ON A.CATEGORY = B.CATEGORY AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID
		WHERE A.ATTRIBUTE_ID IS NULL OR B.ATTRIBUTE_ID IS NULL
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:25 */
		       CASE WHEN A.G_MODELNO IS NULL THEN B.G_MODELNO ELSE A.G_MODELNO END G_MODELNO
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_MODELNM ELSE A.G_MODELNM END G_MODELNM
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_CONDI_NAME ELSE A.G_CONDI_NAME END G_CONDI_NAME
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_MODELNO_GROUP ELSE A.G_MODELNO_GROUP END G_MODELNO_GROUP
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_FACTORY ELSE A.G_FACTORY END G_FACTORY
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_BRAND ELSE A.G_BRAND END G_BRAND
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_CATEGORY ELSE A.G_CATEGORY END G_CATEGORY
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_IMGCHK3 ELSE A.G_IMGCHK3 END G_IMGCHK3
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_DATE ELSE A.G_DATE END G_DATE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_POPULAR ELSE A.G_POPULAR END G_POPULAR
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.MODDATE ELSE A.MODDATE END MODDATE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_STANDARD ELSE A.G_STANDARD END G_STANDARD
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_AMOUNT ELSE A.G_AMOUNT END G_AMOUNT
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_CHANGE ELSE A.G_CHANGE END G_CHANGE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_UNIT ELSE A.G_UNIT END G_UNIT
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.G_MINPRICE ELSE A.G_MINPRICE END G_MINPRICE
			 , CASE WHEN A.G_MODELNO IS NULL THEN 'D' WHEN B.G_MODELNO IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_CATALOG
		FROM TBL_PDSS_LOTTE_CATALOG A
			FULL OUTER JOIN TBL_PDSS_LOTTE_CATALOG_OLD B ON A.G_MODELNO = B.G_MODELNO
		WHERE A.G_MODELNO IS NULL OR B.G_MODELNO IS NULL
		   OR A.G_MODELNM <> B.G_MODELNM OR A.G_CONDI_NAME <> B.G_CONDI_NAME OR A.G_MODELNO_GROUP <> B.G_MODELNO_GROUP
		   OR A.G_FACTORY <> B.G_FACTORY OR A.G_BRAND <> B.G_BRAND OR A.G_CATEGORY <> B.G_CATEGORY
		   OR A.G_STANDARD <> B.G_STANDARD OR A.G_AMOUNT <> B.G_AMOUNT OR A.G_CHANGE <> B.G_CHANGE OR A.G_UNIT <> B.G_UNIT
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:26 */
		       CASE WHEN A.G_MODELNO IS NULL THEN B.G_MODELNO ELSE A.G_MODELNO END G_MODELNO
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.ATTRIBUTE_ID ELSE A.ATTRIBUTE_ID END ATTRIBUTE_ID
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.ATTRIBUTE_ELEMENT_ID ELSE A.ATTRIBUTE_ELEMENT_ID END ATTRIBUTE_ELEMENT_ID
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.ATTRIBUTE_VALUE ELSE A.ATTRIBUTE_VALUE END ATTRIBUTE_VALUE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.INS_DATE ELSE A.INS_DATE END INS_DATE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.UPD_DATE ELSE A.UPD_DATE END UPD_DATE
			 , CASE WHEN A.G_MODELNO IS NULL THEN B.DEL_YN ELSE A.DEL_YN END DEL_YN
			 , CASE WHEN A.G_MODELNO IS NULL THEN 'D' WHEN B.G_MODELNO IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_ATTRIBUTE_CATALOG
		FROM TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG A
			FULL OUTER JOIN TBL_PDSS_LOTTE_ATTRIBUTE_CATALOG_OLD B ON A.G_MODELNO = B.G_MODELNO AND A.ATTRIBUTE_ID = B.ATTRIBUTE_ID AND A.ATTRIBUTE_ELEMENT_ID = B.ATTRIBUTE_ELEMENT_ID
		WHERE A.G_MODELNO IS NULL OR B.G_MODELNO IS NULL
		   OR A.INS_DATE <> B.INS_DATE OR A.UPD_DATE <> B.UPD_DATE
		OPTION (MAXDOP 1)
		
		SELECT /* UDP_LOTTE_PDSS:27 */
		       CASE WHEN A.PL_NO IS NULL THEN B.PL_MODELNO ELSE A.PL_MODELNO END PL_MODELNO
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_NO ELSE A.PL_NO END PL_NO
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_VCODE ELSE A.PL_VCODE END PL_VCODE
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_GOODSCODE ELSE A.PL_GOODSCODE END PL_GOODSCODE
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_PRICE ELSE A.PL_PRICE END PL_PRICE
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_GOODSNM ELSE A.PL_GOODSNM END PL_GOODSNM
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_FREEINTEREST ELSE A.PL_FREEINTEREST END PL_FREEINTEREST
			 , CASE WHEN A.PL_NO IS NULL THEN B.PL_DELIVERY_LEV ELSE A.PL_DELIVERY_LEV END PL_DELIVERY_LEV
			 , CASE WHEN A.PL_NO IS NULL THEN 'D' WHEN B.PL_NO IS NULL THEN 'C' ELSE 'U' END CHANGE_TYPE
		INTO TBL_PDSS_LOTTE_SEND_EP
		FROM TBL_PDSS_LOTTE_EP A
			FULL OUTER JOIN TBL_PDSS_LOTTE_EP_OLD B ON A.PL_NO = B.PL_NO
		WHERE A.PL_NO IS NULL OR B.PL_NO IS NULL
		   OR A.PL_MODELNO <> B.PL_MODELNO OR A.PL_PRICE <> B.PL_PRICE OR A.PL_GOODSNM <> B.PL_GOODSNM
		OPTION (MAXDOP 1)
	END
	
	DROP TABLE #EXTERNAL_ATTRIBUTE
	DROP TABLE #TARGET_PRICELIST
	DROP TABLE #TARGET_GOODS
END
